{"version":3,"sources":["comp/Header.js","comp/Main.js","App.js","index.js"],"names":["Header","props","darkk","backgroundColor","darkMode","color","id","style","src","alt","className","onClick","Click","Main","useState","alldata","setallData","changingData","setChangingData","img","topText","bottomText","cimage","main","setmain","handleChange","event","target","name","value","pvalue","useEffect","fetch","then","ctj","json","data","memes","back","console","log","onChange","type","placeholder","jokeImg","url","previusValue","alradySetMeme","randomNum","Math","floor","random","length","pdata","getChangeMeme","App","dark","setdark","ReactDOM","render","document","getElementById"],"mappings":"kMAEe,SAASA,EAAOC,GAC7B,IAAMC,EAAQ,CACZC,gBAAiBF,EAAMG,SAAW,QAAU,UAC5CC,MAAOJ,EAAMG,SAAW,QAAU,SAGpC,OACE,sBAAKE,GAAG,SAASC,MAAOL,EAAxB,UACE,sBAAKI,GAAG,MAAR,UACE,qBACEE,IAAI,sGACJC,IAAI,KAEN,mDAGF,qBAAKH,GAAG,aAAR,SACE,qBACEI,UAAWT,EAAMG,SAAW,mBAAqB,mBACjDO,QAASV,EAAMW,MAFjB,SAIE,qBAAKN,GAAG,gB,kBCrBH,SAASO,EAAKZ,GAC3B,MAA8Ba,qBAA9B,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwCF,qBAAxC,mBAAOG,EAAP,KAAqBC,EAArB,KAEA,EAAwBJ,mBAAS,CAC/BK,IAAK,mLACLC,QAAS,GACTC,WAAY,GACZC,OAAQ,sEAJV,mBAAOC,EAAP,KAAaC,EAAb,KA8CA,SAASC,EAAaC,GACpB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEdL,GAAQ,SAACM,GACP,OAAO,2BAAKA,GAAZ,kBAAqBF,EAAOC,OA3ChCE,qBAAU,WACRC,MAAM,wCACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACJ,GAAD,OAAWb,EAAWa,QAC7B,CAACN,IAEJQ,qBAAU,WACRC,MAAM,qCACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACJ,GAAD,OAAWX,EAAgBW,EAAMO,KAAKC,YAC7C,IAqCH,IAAMC,EAAO,CACXnC,gBAAiBF,EAAMG,SAAW,UAAY,UAC9CC,MAAOJ,EAAMG,SAAW,QAAU,SAGpC,OACE,sBAAKE,GAAG,WAAWC,MAAO+B,EAA1B,UACGC,QAAQC,IAAI,SACb,sBAAKlC,GAAG,aAAR,UACE,iCACE,uBACEI,UAAU,QACV+B,SAAUhB,EACViB,KAAK,OACLC,YAAY,iBACZf,KAAK,UACLC,MAAON,EAAKH,UAEd,uBACEV,UAAU,QACV+B,SAAUhB,EACViB,KAAK,OACLC,YAAY,iBACZf,KAAK,aACLC,MAAON,EAAKF,gBAGhB,wBAAQf,GAAG,WAAWK,QA9D5B,YAKA,WACE,IAAMiC,EAAU7B,EAAQ8B,IAExBrB,GAAQ,SAACsB,GACP,OAAO,2BACFA,GADL,IAEE3B,IAAKyB,OAVTG,GAeF,WACE,IAAMC,EAAYC,KAAKC,MAAMD,KAAKE,SAAWlC,EAAamC,QAE1D5B,GAAQ,SAAC6B,GACP,OAAO,2BACFA,GADL,IAEE/B,OAAQL,EAAa+B,GAAWH,SApBpCS,IA4DI,yBAKF,sBAAKhD,GAAG,YAAR,UACE,sBAAKA,GAAG,KAAR,UACE,2CACA,qBAAKG,IAAI,GAAGD,IAAKe,EAAKJ,SAExB,sBAAKb,GAAG,MAAR,UACE,oBAAII,UAAU,OAAOJ,GAAG,OAAxB,SACGiB,EAAKH,UAGR,qBAAKd,GAAG,MAAME,IAAKe,EAAKD,OAAQb,IAAI,KACpC,oBAAIC,UAAU,OAAOJ,GAAG,WAAxB,SACGiB,EAAKF,sBCtFHkC,MAff,WACE,MAAwBzC,oBAAS,GAAjC,mBAAO0C,EAAP,KAAaC,EAAb,KAMA,OACE,sBAAK/C,UAAU,MAAf,UACE,cAACV,EAAD,CAAQI,SAAUoD,EAAM5C,MAN5B,WACE6C,GAAQ,SAAC3B,GAAD,OAAaA,QAMnB,cAACjB,EAAD,CAAMT,SAAUoD,QCRtBE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d4b5ea1a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Header(props) {\r\n  const darkk = {\r\n    backgroundColor: props.darkMode ? \"black\" : \"#9092d1\",\r\n    color: props.darkMode ? \"white\" : \"black\",\r\n  };\r\n\r\n  return (\r\n    <div id=\"header\" style={darkk}>\r\n      <div id=\"hc1\">\r\n        <img\r\n          src=\"https://www.pinclipart.com/picdir/big/73-733173_own-creation-funny-face-logo-meme-mania-clipart.png\"\r\n          alt=\"\"\r\n        />\r\n        <h1>Meme Generator</h1>\r\n      </div>\r\n\r\n      <div id=\"toggle-fog\">\r\n        <div\r\n          className={props.darkMode ? \"toggle-con-black\" : \"toggle-con-white\"}\r\n          onClick={props.Click}\r\n        >\r\n          <div id=\"ball\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function Main(props) {\r\n  const [alldata, setallData] = useState();\r\n  const [changingData, setChangingData] = useState();\r\n\r\n  const [main, setmain] = useState({\r\n    img: \"https://cdn.vox-cdn.com/thumbor/7yYZtRB4jIeG_517GXEcycJ2C3U=/0x0:735x500/1200x800/filters:focal(310x192:426x308)/cdn.vox-cdn.com/uploads/chorus_image/image/66727168/image.0.png\",\r\n    topText: \"\",\r\n    bottomText: \"\",\r\n    cimage: \"https://cdn.kapwing.com/collections/One-Does-Not-Simply-m1zju.jpg\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://meme-api.herokuapp.com/gimme\")\r\n      .then((ctj) => ctj.json())\r\n      .then((value) => setallData(value));\r\n  }, [main]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://api.imgflip.com/get_memes\")\r\n      .then((ctj) => ctj.json())\r\n      .then((value) => setChangingData(value.data.memes));\r\n  }, []);\r\n\r\n  function getMeme() {\r\n    alradySetMeme();\r\n    getChangeMeme();\r\n  }\r\n\r\n  function alradySetMeme() {\r\n    const jokeImg = alldata.url;\r\n\r\n    setmain((previusValue) => {\r\n      return {\r\n        ...previusValue,\r\n        img: jokeImg,\r\n      };\r\n    });\r\n  }\r\n\r\n  function getChangeMeme() {\r\n    const randomNum = Math.floor(Math.random() * changingData.length);\r\n\r\n    setmain((pdata) => {\r\n      return {\r\n        ...pdata,\r\n        cimage: changingData[randomNum].url,\r\n      };\r\n    });\r\n  }\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n\r\n    setmain((pvalue) => {\r\n      return { ...pvalue, [name]: value };\r\n    });\r\n  }\r\n\r\n  const back = {\r\n    backgroundColor: props.darkMode ? \"#404040\" : \"#c1c1d4\",\r\n    color: props.darkMode ? \"white\" : \"black\",\r\n  };\r\n\r\n  return (\r\n    <div id=\"main-con\" style={back}>\r\n      {console.log(\"hello\")}\r\n      <div id=\"for-button\">\r\n        <form>\r\n          <input\r\n            className=\"input\"\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            placeholder=\"type meme text\"\r\n            name=\"topText\"\r\n            value={main.topText}\r\n          />\r\n          <input\r\n            className=\"input\"\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            placeholder=\"type meme text\"\r\n            name=\"bottomText\"\r\n            value={main.bottomText}\r\n          />\r\n        </form>\r\n        <button id=\"meme-but\" onClick={getMeme}>\r\n          Get Meme\r\n        </button>\r\n      </div>\r\n\r\n      <div id=\"for-image\">\r\n        <div id=\"ci\">\r\n          <h1>Some tips</h1>\r\n          <img alt=\"\" src={main.img} />\r\n        </div>\r\n        <div id=\"nci\">\r\n          <h1 className=\"font\" id=\"topt\">\r\n            {main.topText}\r\n          </h1>\r\n\r\n          <img id=\"sss\" src={main.cimage} alt=\"\" />\r\n          <h1 className=\"font\" id=\"bottomte\">\r\n            {main.bottomText}\r\n          </h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Header from \"./comp/Header\";\r\nimport Main from \"./comp/Main\";\r\nfunction App() {\r\n  const [dark, setdark] = useState(false);\r\n\r\n  function toggle() {\r\n    setdark((pvalue) => !pvalue);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header darkMode={dark} Click={toggle} />\r\n      <Main darkMode={dark} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}